name: "3D Faster RCNN"
layer {
  name: 'mhd_input'
  type: 'MHDRoiData'
  top: 'data'
  top: 'im_info'
  top: 'gt_boxes'
  mhd_data_param {  
    source: "F:/Deep/MyDataset/LITS/_train_set_list.txt"  
    root_folder: "F:/Deep/MyDataset/LITS/"  
    batch_size: 1
    shuffle: true
    hist_matching: false
    truncate_probability: 0.5
    min_truncate_length: 50
    inplane_shift: 5
    min_intensity: -1000
    max_intensity: 1600
    random_deform: 0.0
    deform_control_point: 2
    deform_sigma: 15.0
    contour_name_list {
      name: "liver"
      name: "lung-r"
      name: "lung-l"
      name: "kidney-r"
      name: "kidney-l"
      name: "femur-r"
      name: "femur-l"
      name: "bladder"
      name: "heart"
      name: "spleen"
      name: "pancreas"
    }
    resample_spacing_x: 2
    resample_spacing_y: 2
    resample_spacing_z: 2
    max_width: 150
    max_height: 150
    max_length: 1000
  }
  include: { phase: TRAIN }
}
layer {
  name: 'mhd_input'
  type: 'MHDRoiData'
  top: 'data'
  top: 'im_info'
  mhd_data_param {  
    source: "F:/Deep/MyDataset/LITS/test/_test_set_list.txt"  
    root_folder: "F:/Deep/MyDataset/LITS/test/"  
    batch_size: 1
    shuffle: true
    hist_matching: false
    truncate_probability: 0.5
    min_truncate_length: 50
    inplane_shift: 5
    min_intensity: -1000
    max_intensity: 1600
    random_deform: 0.0
    deform_control_point: 2
    deform_sigma: 15.0
    contour_name_list {
      name: "liver"
      name: "lung-r"
      name: "lung-l"
      name: "kidney-r"
      name: "kidney-l"
      name: "femur-r"
      name: "femur-l"
      name: "bladder"
      name: "heart"
      name: "spleen"
      name: "pancreas"
    }
    resample_spacing_x: 2
    resample_spacing_y: 2
    resample_spacing_z: 2
    max_width: 150
    max_height: 150
    max_length: 1000
  }
  include: { phase: TEST }
}
layer {
  name: "conv_1"
  type: "Convolution"
  bottom: "data"
  top: "conv_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    kernel_size: 11
    kernel_size: 11
    stride: 4
    stride: 4
    stride: 4
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  bottom: "conv_1"
  top: "conv_1"
  name: "bn_conv_1"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: false
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv_1"
  top: "conv_1"
  name: "scale_conv_1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_1"
  type: "ReLU"
  bottom: "conv_1"
  top: "conv_1"
}
layer {
  name: "pool_1"
  type: "Pooling3D"
  bottom: "conv_1"
  top: "pool_1"
  pooling_3d_param {
    pool: MAX
    kernel_l: 3
    kernel_h: 3
    kernel_w: 3
    stride_l: 2
    stride_h: 2
    stride_w: 2
  }
}
layer {
  name: "conv_2"
  type: "Convolution"
  bottom: "pool_1"
  top: "conv_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    pad: 2
    pad: 2
    kernel_size: 5
    kernel_size: 5
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  bottom: "conv_2"
  top: "conv_2"
  name: "bn_conv_2"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: false
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv_2"
  top: "conv_2"
  name: "scale_conv_2"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_2"
  type: "ReLU"
  bottom: "conv_2"
  top: "conv_2"
}
layer {
  name: "pool_2"
  type: "Pooling3D"
  bottom: "conv_2"
  top: "pool_2"
  pooling_3d_param {
    pool: MAX
    kernel_l: 3
    kernel_h: 3
    kernel_w: 3
    stride_l: 2
    stride_h: 2
    stride_w: 2
  }
}
layer {
  name: "conv_3"
  type: "Convolution"
  bottom: "pool_2"
  top: "conv_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  bottom: "conv_3"
  top: "conv_3"
  name: "bn_conv_3"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: false
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv_3"
  top: "conv_3"
  name: "scale_conv_3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_3"
  type: "ReLU"
  bottom: "conv_3"
  top: "conv_3"
}
layer {
  name: "conv_4"
  type: "Convolution"
  bottom: "conv_3"
  top: "conv_4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  bottom: "conv_4"
  top: "conv_4"
  name: "bn_conv_4"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: false
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv_4"
  top: "conv_4"
  name: "scale_conv_4"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_4"
  type: "ReLU"
  bottom: "conv_4"
  top: "conv_4"
}
layer {
  name: "conv_5"
  type: "Convolution"
  bottom: "conv_4"
  top: "conv_5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  bottom: "conv_5"
  top: "conv_5"
  name: "bn_conv_5"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: false
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv_5"
  top: "conv_5"
  name: "scale_conv_5"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_5"
  type: "ReLU"
  bottom: "conv_5"
  top: "conv_5"
}
#========= RPN ============

layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv_5"
  top: "rpn/output"
  param { 
    lr_mult: 1.0 
  }
  param { 
    lr_mult: 2.0 
  }
  convolution_param {
    num_output: 320
    kernel_size: 3 
    pad: 1 
    stride: 1
    weight_filler { 
      type: "gaussian" 
      std: 0.01 
    }
    bias_filler { 
      type: "constant" 
      value: 0 
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param { 
    lr_mult: 1.0 
  }
  param { 
    lr_mult: 2.0 
  }
  convolution_param {
    num_output: 128   # 2(classes) * 64(anchors)
    kernel_size: 1 
    pad: 0 
    stride: 1
    weight_filler { 
      type: "gaussian" 
      std: 0.01 
    }
    bias_filler { 
      type: "constant" 
      value: 0 
    }
  }
}

layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 384   # 6 * 64(anchors)
    kernel_size: 1 
    pad: 0 
    stride: 1
    weight_filler { 
      type: "gaussian" 
      std: 0.01 
    }
    bias_filler { 
      type: "constant" 
      value: 0 
    }
  }
}

layer {
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  reshape_param { 
    shape { 
      dim: 0 
      dim: 2 # 2 classes
      dim: -1 
      dim: 0 
      dim: 0 
      } 
    }
}

layer {
  name: 'rpn-data'
  type: 'AnchorTarget'
  bottom: 'rpn_cls_score'
  bottom: 'gt_boxes'
  bottom: 'im_info'
  bottom: 'data'
  top: 'rpn_labels'
  top: 'rpn_bbox_targets'
  top: 'rpn_bbox_inside_weights'
  top: 'rpn_bbox_outside_weights'
  anchor_target_param {
    anchor_size {
      width: 15
      width: 30
      width: 60
      width: 120
      height: 15
      height: 30
      height: 60
      height: 120
      length: 15
      length: 30
      length: 60
      length: 120
    }
    feat_stride_xy: 16
    feat_stride_z: 16
    rpn_clobber_positives: false
    rpn_positive_overlap: 0.35
    rpn_negative_overlap: 0.25
    rpn_batchsize: 100
    rpn_fg_fraction: 0.5
    use_multi_classification: false
    bbox_normalize: true
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_std: 0.15
    bbox_normalize_std: 0.15
    bbox_normalize_std: 0.15
    bbox_normalize_std: 0.3
    bbox_normalize_std: 0.3
    bbox_normalize_std: 0.3
  }
  include: { phase: TRAIN }
}


layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  propagate_down: 1
  propagate_down: 0
  top: "rpn_cls_loss"
  loss_weight: 1
  loss_param {
    ignore_label: -1
    normalize: true
  }
  include: { phase: TRAIN }
}

layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param { sigma: 1.0 }
  include: { phase: TRAIN }
}

layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}

layer {
  name: 'rpn_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'rpn_cls_prob'
  top: 'rpn_cls_prob_reshape'
  reshape_param { 
    shape { 
      dim: 0 
      dim: 128 # 2(classes) * 64(anchors)
      dim: -1 
      dim: 0 
      dim: 0 
    } 
  }
}

layer {
  name: 'proposal'
  type: 'Proposal'
  bottom: 'rpn_cls_prob_reshape'
  bottom: 'rpn_bbox_pred'
  bottom: 'im_info'
  top: 'rpn_rois'
  proposal_param {
    anchor_size {
      width: 15
      width: 30
      width: 60
      width: 120
      height: 15
      height: 30
      height: 60
      height: 120
      length: 15
      length: 30
      length: 60
      length: 120
    }
    feat_stride_xy: 16
    feat_stride_z: 16
    rpn_min_size: 0
    rpn_pre_nms_top_n: 2000
    rpn_post_nms_top_n: 100
    rpn_nms_threshold: 0.5
    proposal_num: 200
    bg_score_threshold: 0.5
    bbox_normalize: true
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_std: 0.15
    bbox_normalize_std: 0.15
    bbox_normalize_std: 0.15
    bbox_normalize_std: 0.3
    bbox_normalize_std: 0.3
    bbox_normalize_std: 0.3
  }
}

layer {
  name: 'proposal_target'
  type: 'ProposalTarget'
  bottom: 'rpn_rois'
  bottom: 'gt_boxes'
  top: 'rois'
  top: 'labels'
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  proposal_target_param {
    class_num: 12 # 12 classes
    fg_threshold: 0.3
    bbox_normalize: true
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_std: 0.15
    bbox_normalize_std: 0.15
    bbox_normalize_std: 0.15
    bbox_normalize_std: 0.3
    bbox_normalize_std: 0.3
    bbox_normalize_std: 0.3
  }
  include: { phase: TRAIN }
}

#========= RCNN ============

layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv_5"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_l: 6
    pooled_w: 6
    pooled_h: 6
    spatial_scale_xy: 0.0625 # 1/16
    spatial_scale_z: 0.0625 # 1/16
  }
  include: { phase: TRAIN }
}


layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv_5"
  bottom: "rpn_rois"
  top: "pool5"
  roi_pooling_param {
    pooled_l: 6
    pooled_w: 6
    pooled_h: 6
    spatial_scale_xy: 0.0625 # 1/16
    spatial_scale_z: 0.0625 # 1/16
  }
  include: { phase: TEST }
}

layer {
  name: "fc6_frcnn"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6_frcnn"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
    
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6_frcnn"
  top: "fc6_frcnn"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6_frcnn"
  top: "fc6_frcnn"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_frcnn"
  type: "InnerProduct"
  bottom: "fc6_frcnn"
  top: "fc7_frcnn"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7_frcnn"
  top: "fc7_frcnn"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7_frcnn"
  top: "fc7_frcnn"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7_frcnn"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 12 # 12 classes (include background)
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7_frcnn"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 72 # 12 classes x 6 bbox param
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  propagate_down: 1
  propagate_down: 0
  top: "loss_cls"
  loss_weight: 1
  include: { phase: TRAIN }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 1
  include: { phase: TRAIN }
}
layer {
  name: "loss_cls"
  type: "Softmax"
  bottom: "cls_score"
  top: "loss_cls"
  include: { phase: TEST }
}
layer {
  name: "bbox_output"
  type: "BBoxOutput"
  bottom: "rpn_rois"
  bottom: "loss_cls"
  bottom: "bbox_pred"
  bottom: 'im_info'
  bbox_output_param {
    source: "F:/Deep/MyDataset/LITS/test/_test_set_list.txt"  
    root_folder: "F:/Deep/MyDataset/LITS/test/"
    output_root_folder: "F:/Deep/MyDataset/LITS/test/results_frcnn/"
    output_max_score: true
    bbox_normalize: true
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_mean: 0
    bbox_normalize_std: 0.15
    bbox_normalize_std: 0.15
    bbox_normalize_std: 0.15
    bbox_normalize_std: 0.3
    bbox_normalize_std: 0.3
    bbox_normalize_std: 0.3
  } 
  include: { phase: TEST }
}